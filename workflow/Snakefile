#!/usr/bin/env python3
"""
PCQTL Analysis Workflow

This Snakemake workflow performs principal component QTL (pcQTL) analysis on GTEx data,
including gene expression clustering, QTL mapping, fine-mapping with SuSiE, and
functional annotation of variants.
"""

import os
import pandas as pd
from pathlib import Path

# Load input data
tissue_ids = pd.read_csv(config['tissue_id_path'])['Tissue'].tolist()
chr_list = pd.read_csv(config['chr_list_path'])['chr_id'].tolist()
gwas_ids = pd.read_table(config['gwas_meta'])['Tag'].tolist()

# Analysis parameters
NULL_SIZES = [2, 3, 4, 5]
USE_SUSIE = "True"

# Include rule modules
include: "rules/clusters.smk"
include: "rules/eqtl.smk"
include: "rules/pcqtl.smk"
include: "rules/annotate.smk"
include: "rules/coloc.smk"

# Main workflow targets
rule all:
    """Main workflow target - defines all outputs to be generated."""
    input:
        # Core clustering and annotation
        clusters = expand(f"{config['clusters_dir']}{{TISSUE}}.clusters.txt", TISSUE=tissue_ids),
        annotated_clusters = expand(f"{config['annotations_output_dir']}{{TISSUE}}/{{TISSUE}}.clusters.annotated.txt", TISSUE=tissue_ids),
        annotated_nulls = expand(f"{config['annotations_output_dir']}{{TISSUE}}/{{TISSUE}}.null_{{CLUSTER_SIZE}}genes.annotated.txt", 
                                TISSUE=tissue_ids, CLUSTER_SIZE=NULL_SIZES),
        
        # eQTL analysis outputs
        eqtl_susie = expand(f"{config['eqtl_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.cluster_genes.susie.txt", TISSUE=tissue_ids),
        eqtl_permutation = expand(f"{config['eqtl_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.cluster_genes.cis_independent_qtl.txt.gz", TISSUE=tissue_ids),
        eqtl_nominal = expand(f"{config['eqtl_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.cluster_genes.cis_qtl_pairs.{{CHROM}}.parquet", 
                             CHROM=chr_list, TISSUE=tissue_ids),
        
        # pcQTL analysis outputs  
        pcqtl_susie = expand(f"{config['pcqtl_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.pcs.susie.txt", TISSUE=tissue_ids),
        pcqtl_permutation = expand(f"{config['pcqtl_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.pcs.cis_independent_qtl.txt.gz", TISSUE=tissue_ids),
        pcqtl_nominal = expand(f"{config['pcqtl_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.pcs.cis_qtl_pairs.{{CHROM}}.parquet", 
                              CHROM=chr_list, TISSUE=tissue_ids),
        
        # Annotated outputs
        susie_annotated = expand(f"{config['annotations_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.susie_R_vars.annotated.csv", TISSUE=tissue_ids),
        pc_annotated = expand(f"{config['annotations_output_dir']}{{TISSUE}}/{{TISSUE}}.v8.pcs_annotated.txt", TISSUE=tissue_ids),
        
        # Co-localization analysis
        coloc_pairs = expand(f"{config['coloc_output_dir']}pairs/{{TISSUE}}.v8.pairs_coloc.{{CHROM}}.txt", 
                            CHROM=chr_list, TISSUE=tissue_ids),
        gwas_colocs = expand(f"{config['coloc_output_dir']}gwas/{{TISSUE}}/{{TISSUE}}.v8.{{GWAS}}.susie_{USE_SUSIE}.gwas_coloc.txt", 
                            TISSUE=tissue_ids, GWAS=gwas_ids, USE_SUSIE=USE_SUSIE),
        
        # Signal groups analysis
        qtl_signal_groups = expand(f"{config['coloc_output_dir']}qtl_signal_groups/{{TISSUE}}.qtl_signal_groups.txt", TISSUE=tissue_ids),
        gwas_signal_groups = expand(f"{config['coloc_output_dir']}gwas_signal_groups/{{TISSUE}}.{{GWAS}}.gwas_signal_groups.txt", 
                                   TISSUE=tissue_ids, GWAS=gwas_ids)

# Development/testing target - uncomment for quick testing
# rule test:
#     """Test target for development - runs on single tissue."""
#     input:
#         clusters = f"{config['clusters_dir']}Artery_Tibial.clusters.txt",
#         annotated_clusters = f"{config['annotations_output_dir']}Artery_Tibial/Artery_Tibial.clusters.annotated.txt" 